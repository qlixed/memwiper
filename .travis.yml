# vim: nospell nofoldenable

language: python
python:
    "3.7"
sudo: false
cache: pip
env:
  global:
    - LD_PRELOAD=/lib/x86_64-linux-gnu/libSegFault.so
    - SEGFAULT_SIGNALS=all
  matrix:
    - TOXENV=check
    - TOXENV=docs
matrix:
  allow_failures:
    - env: TOXENV=docs
  include:
    - os: linux
      python: "3.5"
      env:
        - TOXENV=3.5-cover-linux,report,extension-coveralls,coveralls,codecov
    - os: osx
      python: "3.5"
      language: generic
      env:
        - TOXENV=3.5-cover-osx,report,extension-coveralls,coveralls,codecov

    - os: linux
      python: "3.5"
      env:
        - TOXENV=3.5-nocov-linux
    - os: osx
      python: "3.5"
      language: generic
      env:
        - TOXENV=3.5-nocov-osx
    - os: osx
      python: "3.6"
      language: generic
      env:
        - TOXENV=3.6-cover-osx,report,extension-coveralls,coveralls,codecov

    - os: linux
      python: "3.6"
      env:
        - TOXENV=3.6-nocov-linux
    - os: osx
      python: "3.6"
      language: generic
      env:
        - TOXENV=3.6-nocov-osx

    - os: linux
      python: "3.7"
      env:
        - TOXENV=3.7-cover-linux,report,extension-coveralls,coveralls,codecov
    - os: osx
      python: "3.7"
      language: generic
      env:
        - TOXENV=3.7-cover-osx,report,extension-coveralls,coveralls,codecov

    - os: linux
      python: "3.7"
      env:
        - TOXENV=3.7-nocov-linux
    - os: osx
      python: "3.7"
      language: generic
      env:
        - TOXENV=3.7-nocov-osx

    - os: linux
      python: "3.8"
      env:
        - TOXENV=3.8-cover-linux,report,extension-coveralls,coveralls,codecov
    - os: osx
      python: "3.8"
      language: generic
      env:
        - TOXENV=3.8-cover-osx,report,extension-coveralls,coveralls,codecov

    - os: linux
      python: "3.8"
      env:
        - TOXENV=3.8-nocov-linux
    - os: osx
      python: "3.8"
      language: generic
      env:
        - TOXENV=3.8-nocov-osx

before_install:
  - python --version
  - uname -a
  - if [[ $TRAVIS_OS_NAME != "osx" ]];then lsb_release -a ;fi
install: 
  - |
      if [[ $TRAVIS_OS_NAME == "osx" ]];then 
        git clone https://github.com/pyenv/pyenv.git ~/.pyenv
        export PYENV_ROOT="$HOME/.pyenv"
        export PATH="$PYENV_ROOT/bin:$PATH"
        eval "$(pyenv init -)"
        export PYENV_BRANCH=$(echo $TOXENV | cut -d"-" -f1)
        echo "The Base branch is: $PYENV_BRANCH"
      fi
  - |
      if [[ $TRAVIS_OS_NAME == "osx" ]];then
        export PYENV_BRANCH_LASTEST=$(pyenv install --list | grep "$PYENV_BRANCH" | grep -v "-" | tail -1)
        echo "Going for: $PYENV_BRANCH_LASTEST"
        pyenv install $PYENV_BRANCH_LASTEST
        pyenv local $PYENV_BRANCH_LASTEST
        eval "$(pyenv init -)"
      fi
  - pip install tox
  - virtualenv --version
  - easy_install --version
  - pip --version
  - tox --version
script:
  - tox -v
after_failure:
  - more .tox/log/* | cat
  - more .tox/*/log/* | cat
notifications:
  email:
    on_success: never
    on_failure: always
