[tox]
envlist =
    clean,
    check,
    docs,
    py35-cover,
    py35-nocov,
    py36-cover,
    py36-nocov,
    py37-cover,
    py37-nocov,
    py38-cover,
    py38-nocov,
    report

[pytest]
testpaths = tests

[testenv]
basepython =
    docs: {env:TOXPYTHON:python3}
    {bootstrap,clean,check,report,codecov,coveralls,extension-coveralls,codacy}: {env:TOXPYTHON:python3}
setenv =
    PYTHONPATH={toxinidir}/tests
    PYTHONUNBUFFERED=yes
passenv =
    *
deps =
    pytest
    pytest-travis-fold
commands =
    python setup.py clean --all build_ext --force --inplace
    {posargs:pytest -vv --ignore=src}

[testenv:bootstrap]
deps =
    jinja2
    matrix
skip_install = true
commands =
    python ci/bootstrap.py --no-env

[testenv:check]
deps =
    docutils
    check-manifest
    flake8
    black
    readme-renderer
    pygments
    isort
    bandit
skip_install = true
commands =
    python setup.py check --strict --metadata --restructuredtext
    check-manifest {toxinidir}
    black src tests setup.py
    flake8 src tests setup.py
    isort --verbose --check-only --diff --recursive src tests setup.py
    bandit -c bandit.yml -r src

[testenv:docs]
usedevelop = true
deps =
    -r{toxinidir}/docs/requirements.txt
commands =
    sphinx-build {posargs:-E} -b html docs dist/docs
    sphinx-build -b linkcheck docs dist/docs

[testenv:coveralls]
deps =
    coveralls
skip_install = true
commands =
    coveralls --merge=extension-coveralls.json []

[testenv:extension-coveralls]
deps =
    cpp-coveralls
skip_install = true
commands =
    coveralls --build-root=. --include=src --dump=extension-coveralls.json []

[testenv:codecov]
deps =
    codecov
skip_install = true
commands =
    codecov []

[testenv:codacy]
deps =
    codacy-coverage
skip_install = true
commands =
    python-codacy-coverage -t 5e7c6ae242aa4da3a700b89bde497bf2 -r coverage.xml []

[testenv:report]
deps = coverage
skip_install = true
commands =
    coverage report
    coverage html
    coverage xml

[testenv:clean]
commands = coverage erase
skip_install = true
deps = coverage

[testenv:py35-cover]
basepython = {env:TOXPYTHON:python3.5}
setenv =
    {[testenv]setenv}
    SETUPPY_CFLAGS=-coverage
usedevelop = true
commands =
    if [[ $TRAVIS_OS_NAME == 'osx' ]]; then
        brew update
        brew install openssl readline sqlite3 xz zlib
        brew install pyenv
        if [[ command -v pyenv 1>/dev/null 2>&1]]; then
            eval "$(pyenv init -)"
        fi
        pyenv install py35-cover
        pyenv local py35-cover
        #export PATH="/usr/local/opt/python/libexec/bin:${PATH}"
    fi
    python setup.py clean --all build_ext --force --inplace
    {posargs:pytest --cov --cov-report=term-missing -vv}
deps =
    {[testenv]deps}
    pytest-cov

[testenv:py35-nocov]
basepython = {env:TOXPYTHON:python3.5}

[testenv:py36-cover]
basepython = {env:TOXPYTHON:python3.6}
setenv =
    {[testenv]setenv}
    SETUPPY_CFLAGS=-coverage
usedevelop = true
commands =
    if [[ $TRAVIS_OS_NAME == 'osx' ]]; then
        brew update
        brew install openssl readline sqlite3 xz zlib
        brew install pyenv
        if [[ command -v pyenv 1>/dev/null 2>&1]]; then
            eval "$(pyenv init -)"
        fi
        pyenv install py36-cover
        pyenv local py36-cover
        #export PATH="/usr/local/opt/python/libexec/bin:${PATH}"
    fi
    python setup.py clean --all build_ext --force --inplace
    {posargs:pytest --cov --cov-report=term-missing -vv}
deps =
    {[testenv]deps}
    pytest-cov

[testenv:py36-nocov]
basepython = {env:TOXPYTHON:python3.6}

[testenv:py37-cover]
basepython = {env:TOXPYTHON:python3.7}
setenv =
    {[testenv]setenv}
    SETUPPY_CFLAGS=-coverage
usedevelop = true
commands =
    if [[ $TRAVIS_OS_NAME == 'osx' ]]; then
        brew update
        brew install openssl readline sqlite3 xz zlib
        brew install pyenv
        if [[ command -v pyenv 1>/dev/null 2>&1]]; then
            eval "$(pyenv init -)"
        fi
        pyenv install py37-cover
        pyenv local py37-cover
        #export PATH="/usr/local/opt/python/libexec/bin:${PATH}"
    fi
    python setup.py clean --all build_ext --force --inplace
    {posargs:pytest --cov --cov-report=term-missing -vv}
deps =
    {[testenv]deps}
    pytest-cov

[testenv:py37-nocov]
basepython = {env:TOXPYTHON:python3.7}

[testenv:py38-cover]
basepython = {env:TOXPYTHON:python3.8}
setenv =
    {[testenv]setenv}
    SETUPPY_CFLAGS=-coverage
usedevelop = true
commands =
    if [[ $TRAVIS_OS_NAME == 'osx' ]]; then
        brew update
        brew install openssl readline sqlite3 xz zlib
        brew install pyenv
        if [[ command -v pyenv 1>/dev/null 2>&1]]; then
            eval "$(pyenv init -)"
        fi
        pyenv install py38-cover
        pyenv local py38-cover
        #export PATH="/usr/local/opt/python/libexec/bin:${PATH}"
    fi
    python setup.py clean --all build_ext --force --inplace
    {posargs:pytest --cov --cov-report=term-missing -vv}
deps =
    {[testenv]deps}
    pytest-cov

[testenv:py38-nocov]
basepython = {env:TOXPYTHON:python3.8}
