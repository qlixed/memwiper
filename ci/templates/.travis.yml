# vim: nospell nofoldenable

language: python
python:
    "3.4"
sudo: false
cache: pip
env:
  global:
    - LD_PRELOAD=/lib/x86_64-linux-gnu/libSegFault.so
    - SEGFAULT_SIGNALS=all
  matrix:
    - TOXENV=check
    - TOXENV=docs
matrix:
  include:
{%- for env, config in tox_environments|dictsort %}{{ '' }}
    - os: {{ config.os }}
      python: "{{ '{0[0]}-5.4'.format(env.split('-')) if env.startswith('pypy') else env.split('-')[0] }}"
      {% if config.os == "osx" %}
      language: generic
      {% endif %}
      env:
        - TOXENV={{ env }}{% if config.cover %},report,extension-coveralls,coveralls,codecov{% endif -%}
{% endfor %}

before_install:
  - python --version
  - uname -a
  - if [[ $TRAVIS_OS_NAME != "osx" ]];then lsb_release -a ;fi
install: 
  - |
      if [[ $TRAVIS_OS_NAME == "osx" ]];then 
        git clone https://github.com/pyenv/pyenv.git ~/.pyenv
        export PYENV_ROOT="$HOME/.pyenv"
        export PATH="$PYENV_ROOT/bin:$PATH"
        eval "$(pyenv init -)"
        PYENV_BRANCH=$(echo $TOXENV | cut -d"-" -f1)
        echo "The Base branch is: $PYENV_BRANCH"
      fi
  - |
      if [[ $TRAVIS_OS_NAME == "osx" ]];then
        pyenv install --list
        pyenv install --list | grep "$PYENV_BRANCH"
        set PYENV_BRANCH_LASTEST=$(pyenv install --list | grep "$PYENV_BRANCH" | grep -v "-" | tail -1)
        echo "Going for: $PYENV_BRANCH_LASTEST"
        pyenv --debug install $PYENV_BRANCH_LASTEST
        pyenv local $PYENV_BRANCH_LASTEST
        eval "$(pyenv init -)"
      fi
  - pip install tox
  - virtualenv --version
  - easy_install --version
  - pip --version
  - tox --version
script:
  - tox -v
after_failure:
  - more .tox/log/* | cat
  - more .tox/*/log/* | cat
notifications:
  email:
    on_success: never
    on_failure: always
