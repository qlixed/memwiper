language: python
python:
    "3.4"
sudo: false
cache: pip
env:
  global:
    - LD_PRELOAD=/lib/x86_64-linux-gnu/libSegFault.so
    - SEGFAULT_SIGNALS=all
  matrix:
    - TOXENV=check
    - TOXENV=docs
matrix:
  include:
{%- for env, config in tox_environments|dictsort %}{{ '' }}
    - os: {{ config.os }}
      {% if config.os == 'osx' %}
      language: generic
      {% else %}
      python: '{{ '{0[0]}-5.4'.format(env.split('-')) if env.startswith('pypy') else env.split('-')[0] }}'
      {% endif %}
      env:
        - TOXENV={{ env }}{% if config.cover %},report,extension-coveralls,coveralls,codecov{% endif -%}
{% endfor %}

before_install:
  - python --version
  - uname -a
  - |
      if [[ $TRAVIS_OS_NAME != 'osx' ]];then 
        lsb_release -a
      fi
install: 
  - |
      if [[ $TRAVIS_OS_NAME == 'osx' ]];then 
        echo $TOXENV
        echo "PYVER: $(echo $TOXENV | cut -d'-' -f1)"
        brew update
        if [[ "$(brew outdated --quiet | grep -qx pyenv)" != "" ]];then
            brew upgrade pyenv
        fi
        pyenv install $(echo $TOXENV | cut -d"-" -f1)-dev
        alias python=python3
        python --version
        alias pip=pip3
      fi
  - pip install tox
  - virtualenv --version
  - easy_install --version
  - pip --version
  - tox --version
script:
  - tox -v
after_failure:
  - more .tox/log/* | cat
  - more .tox/*/log/* | cat
notifications:
  email:
    on_success: never
    on_failure: always
