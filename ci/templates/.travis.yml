language: python
dist: xenial
cache: false
env:
  global:
    - LD_PRELOAD=/lib/x86_64-linux-gnu/libSegFault.so
    - SEGFAULT_SIGNALS=all
matrix:
  include:
    - python: '3.6'
      env:
        - TOXENV=check
    - python: '3.6'
      env:
        - TOXENV=docs
{%- for env, config in tox_environments|dictsort %}{{ '' }}
    - env:
        - TOXENV={{ env }}{% if config.cover %},codecov{% endif %}
{%- if env.startswith('pypy3') %}{{ '' }}
       - TOXPYTHON=pypy3
      python: 'pypy3'
{%- elif env.startswith('pypy') %}{{ '' }}
      python: 'pypy'
{%- else %}{{ '' }}
      python: '{{ "{0[2]}.{0[3]}".format(env) }}'
{%- endif %}
{%- if env in  ['py37-nocov'] %}{{ '' }}
    - os: osx
      language: generic
      env:
        - TOXENV={{ env }}
    - os: windows
      language: bash
      env:
        - TOXENV={{ env }}
{%- endif %}{{ '' }}
{%- endfor %}{{ '' }}
before_install:
  - python --version
  - uname -a
  - lsb_release -a || true
  - |
    if [[ $TRAVIS_OS_NAME == 'windows' ]]; then
      export LD_PRELOAD=
      choco install python3
      pip install pyenv-win --target $HOME/.pyenv
      export PATH="$HOME/.pyenv/pyenv-win/bin:$HOME/.pyenv/pyenv-win/shims:$PATH"
    fi
  - |
    if [[ $TRAVIS_OS_NAME == 'osx' ]] || [[ $TRAVIS_OS_NAME == 'windows' ]]; then
      python --version
      eval "$(pyenv init -)"
      pyenv rehash
      pyenv versions
      pyenv install 3.7-dev
      pyenv versions
      pyenv global 3.7-dev
      pyenv versions
      python --version
      which python
    fi
install:
  - python --version
  - which python
  - python -mpip install --progress-bar=off tox -r ci/requirements.txt
  - virtualenv --version
  - easy_install --version
  - pip --version
  - tox --version
script:
  - tox -v
after_failure:
  - more .tox/log/* | cat
  - more .tox/*/log/* | cat
notifications:
  email:
    on_success: never
    on_failure: always
